/* Box Size*/
/* -------------------------*/
/* Button*/
/* -------------------------*/
/* */
/* Block*/
/* -------------------------*/
/****/
/*== Inline block*/
/*==========================================*/
/*== vertical block*/
/*==========================================*/
/*== Translate X - Y - Z*/
/*==========================================*/
/*== Transform*/
/*==========================================*/
/*== Transform*/
/*==========================================*/
/*== Background Size*/
/*==========================================*/
/*== Background origin*/
/*==========================================*/
/*== Border radius*/
/*==========================================*/
/*== Text Shadow*/
/*==========================================*/
/*== Transform Origin*/
/*==========================================*/
/*== appearance*/
/*==========================================*/
/*== selection*/
/*==========================================*/
/*== animation fill mode*/
/*==========================================*/
/*== filter*/
/*==========================================*/
/* Clear Lists*/
/* -------------------------*/
/* Formart lists widget*/
/* -------------------------*/
/* Position mixin*/
/*==========================================*/
/* @param [string] $position: position type*/
/* @param [list] $args: list of offsets and values*/
/*==========================================*/
/* Absolute positioning mixin*/
/*==========================================*/
/* @param [list] $args: list of offsets and values*/
/*==========================================*/
/* Arrow mixin*/
/*==========================================*/
/* @param [string] $direction: arrow direction*/
/* @param [list] $position: list of offsets and values*/
/* @param [color] $color (inherit): arrow color*/
/* @param [number] $size (1em): arrow size*/
/*==========================================*/
/* Font size - rem*/
/*==========================================*/
/*== Border*/
/*==========================================*/
/* State and hover*/
/*==========================================*/
/*== Flexible Layout*/
/*==========================================*/
/* Retina Sprite Mixins*/
/** elements mixins **/
/**
* Transition-timing-function property@mixin
*/
/*background RGBA
============================================*/
/*copyright*/
/*sub heading (h2,h3) define*/
/*background*/
/* Panels*/
/* -------------------------*/
/*/ button variant outline*/
/* icon variant inverse*/
/* icon variant outline*/
/* Block*/
/* -------------------------*/
/****/
/****/
/*
 * Global variables
 */
/* Fonts */
/* main color which will be used for all main block styles... */
/**
 * Import component variables
 */
/* --- SCSS For Accordion --- */
/* --- SCSS For Breadcrumb --- */
/* --- SCSS For Buttons --- */
/* --- SCSS For Call-to-action --- */
/* --- SCSS For Content-slider --- */
/*  */
/* carousel-controls-v1 */
/* carousel-controls-v2 */
/* carousel-controls-v3 */
/* Navigation Styles */
/* carousel-indicators-v1 */
/* carousel-indicators-v2 */
/* carousel-indicators-v3 */
/* carousel-indicators-v4 */
/* carousel-indicators-v5 */
/* carousel-indicators-v6 */
/* --- SCSS For Counters --- */
/* --- SCSS For Heading --- */
/* --- SCSS For Icon-box --- */
/* --- SCSS For Interactive-banner --- */
/* --- SCSS For Latest-posts --- */
/* latest posts */
/* --- SCSS For List --- */
/* variables for list */
/* variables for list light */
/* --- SCSS For Message --- */
/* --- SCSS For Newsletter --- */
/* --- SCSS For Piechart --- */
/* --- SCSS For Pricing --- */
/* --- SCSS For Process-steps --- */
/* process-steps */
/* --- SCSS For Service --- */
/* variables for tab style1 using as base of tab */
/* --- SCSS For Style-icon --- */
/* Variables icons default */
/* Variables icons bodered */
/* Variables icons darker */
/* Variables icons light */
/* Variables icons plain */
/* Variables icons for light style */
/* Variables icons outline */
/* Variables icons inverse */
/* --- SCSS For Table --- */
/* --- SCSS For Tabs --- */
/* --- SCSS For Table --- */
/* --- SCSS For Tabs --- */
/* variables for tab style1 using as base of tab */
/* tab style version 4 */
/* tab style version 5 */
/* tab style version 6 */
/* --- SCSS For Testimonials --- */
/* testimonials default */
/* testimonials-v1 */
/* testimonials light */
/* --- SCSS For Typography --- */
/**
 * Header Block 
 */
@media (min-width: 768px) and (max-width: 1199px) {
  .footer-blockbuilder .pa-row-container.wrap-xs .pa-column-container {
    margin-bottom: 20px; }
    .footer-blockbuilder .pa-row-container.wrap-xs .pa-column-container:nth-child(2) {
      margin-bottom: 35px; } }

@media (max-width: 767px) {
  .footer-blockbuilder .pa-row-container.wrap-xs .pa-column-container {
    margin: 5px 0; } }

@media (max-width: 767px) {
  .footer-blockbuilder .pa-row-container.wrap-xs {
    text-align: center; } }

.pavo-header-builder {
  position: relative; }
  .pavo-header-builder.style-absolute {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 4; }

/* header block */
.pavo-popup-search {
  position: relative; }
  .pavo-popup-search .popup-search-container {
    position: absolute;
    top: 40px;
    left: 0;
    padding: 10px 20px;
    background: #0088cc; }
    .pavo-popup-search .popup-search-container .close {
      cursor: pointer;
      z-index: 9; }
    .pavo-popup-search .popup-search-container .searchbox .searchbox-inner .quick-search-form input {
      border: none;
      border-top-right-radius: 25px;
      border-bottom-right-radius: 25px;
      box-shadow: none;
      border: 1px solid #ebebeb; }
    .pavo-popup-search .popup-search-container .searchbox .searchbox-inner .quick-search-form .btn {
      z-index: 9;
      box-shadow: none;
      border: 1px solid #ebebeb;
      bottom: 0; }

/* quick login */
.pavo-widget-quicklogin .dropdown-menu {
  padding: 30px; }

.pavo-widget-quicklogin .quicklogin-head {
  border-bottom: solid 1px #f2f2f2;
  padding-bottom: 10px;
  min-width: 255px;
  line-height: 0; }
  .pavo-widget-quicklogin .quicklogin-head span {
    font-weight: bold;
    text-transform: uppercase; }

/**
 * Footer Style
 */
/**
  *
  */
.pa-google-map {
  min-height: 300px; }

.pac-container.pac-logo {
  z-index: 99999; }

/**
 *
 */
.pavo-widget-team {
  border: 1px solid transparent !important;
  margin-bottom: 30px;
  position: relative;
  overflow: hidden; }
  .pavo-widget-team.layout-1 {
    text-align: center; }
    .pavo-widget-team.layout-1 .content-socials {
      opacity: 0;
      -moz-transition: all 0.5s;
      -webkit-transition: all 0.5s;
      -moz-transition: all 0.5s;
      -ms-transition: all 0.5s;
      position: absolute;
      top: 40%;
      left: 0;
      width: 100%; }
  .pavo-widget-team.layout-3 .content-overlay {
    border-radius: 50%;
    text-align: center;
    width: 100%;
    height: 100%;
    padding: 0 !important;
    opacity: 0;
    transition: all .3s ease 0s;
    transform: translateY(100%);
    background: rgba(0, 0, 0, 0.4);
    position: absolute;
    top: 0;
    bottom: 0;
    color: #FFF;
    display: flex;
    flex-direction: column;
    justify-content: center; }
  .pavo-widget-team.layout-3:hover .content-overlay {
    transform: translateY(0);
    opacity: 1; }
  .pavo-widget-team .content-title {
    margin: 0px !important;
    font-size: 15px !important;
    text-transform: capitalize !important;
    font-weight: 700;
    padding-top: 15px;
    padding-bottom: 5px; }
  .pavo-widget-team .content-subtitle {
    margin-bottom: 0px !important; }
  .pavo-widget-team .content-desc {
    margin: 0 0 20px;
    float: left;
    font-size: 13px;
    width: 100%;
    color: #707070;
    text-transform: capitalize; }
  .pavo-widget-team:hover .content-socials {
    opacity: 1; }
  .pavo-widget-team:hover .content-image:before {
    opacity: 1; }

.content-image {
  border-bottom: 1px solid transparent !important;
  position: relative; }
  .content-image:before {
    content: '';
    position: absolute;
    opacity: 0;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: transparent !important;
    transition: all 0.3s;
    -moz-transition: all 0.3s;
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -ms-transition: all 0.3s; }

/* social wiget */
.social-network .size-small a {
  font-size: 13px !important; }

.social-network .size-medium a {
  font-size: 18px !important; }

.social-network .size-large a {
  font-size: 20px !important; }

.social-network.style-light a {
  color: #FFF !important; }
  .social-network.style-light a:hover {
    color: #0088cc !important; }

.social-network.style-dark a {
  color: #000 !important; }
  .social-network.style-dark a:hover {
    color: #0088cc !important; }

.social-network .social {
  margin-bottom: 0px !important; }
  .social-network .social li {
    padding: 0 5px; }
    @media (max-width: 480px) {
      .social-network .social li {
        padding: 0px; } }
    .social-network .social li a {
      display: block;
      line-height: 15px;
      text-align: center;
      border: none;
      color: #111;
      background: #fff;
      border-radius: 50%;
      height: 35px;
      width: 35px;
      line-height: 30px;
      border-radius: 0%;
      -webkit-border-radius: 0%;
      -moz-border-radius: 0%;
      -ms-border-radius: 0%;
      -o-border-radius: 0%;
      -moz-transition: all 0.3s ease-in-out;
      -o-transition: all 0.3s ease-in-out;
      -webkit-transition: all 0.3s ease-in-out;
      transition: all 0.3s ease-in-out; }
      .social-network .social li a:hover {
        border-bottom: 2px solid #0069a7;
        border-radius: 0; }
      .social-network .social li a .fa {
        font-size: 13px; }

@media (max-width: 767px) {
  .pa_single_image_element .image-item {
    margin-bottom: 20px; } }

.pa_single_image_element .image-item .pa_single_image img {
  width: auto;
  margin: 0 auto; }

.bg-heading .content-heading {
  background: #FFF;
  padding: 0 25px !important; }

/**
 * Heading
 */
.pavo-widget-heading .content-heading,
.pavo-widget-heading .content-subheading {
  display: inline-block; }

.pavo-widget-heading .content-heading {
  font-size: 30px;
  line-height: 40px;
  color: #111;
  font-family: "PT Serif", cursive;
  padding: 0;
  font-weight: 500;
  letter-spacing: -0.5px;
  vertical-align: middle; }

.pavo-widget-heading .content-subheading {
  color: #888888;
  vertical-align: middle;
  padding-top: 25px; }

.pavo-widget-heading.hot-deals-v1 {
  color: #FFF;
  padding: 10px 30px;
  position: relative; }
  .pavo-widget-heading.hot-deals-v1:after {
    width: 0;
    height: 0;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-right: 15px solid #FFF;
    top: 50%;
    right: 0px;
    position: absolute;
    content: ""; }
  @media (max-width: 767px) {
    .pavo-widget-heading.hot-deals-v1:after {
      display: none; } }
  .pavo-widget-heading.hot-deals-v1 .content-subheading {
    color: #FFF;
    padding-top: 0; }

.pavo-widget-heading.style-center {
  text-align: center; }

.pavo-widget-heading.style-left {
  text-align: left; }
  .pavo-widget-heading.style-left h2 {
    color: #444; }

.pavo-widget-heading.style-right {
  text-align: right; }

.pavo-widget-heading.style-v2 {
  border: 1px solid #f2f2f2; }
  .pavo-widget-heading.style-v2 .content-heading {
    font-size: 18px;
    font-family: "Open Sans", Helvetica, Arial, sans-serif;
    line-height: 30px;
    padding-left: 10px;
    margin-top: 10px; }

.pavo-widget-heading.style-light-center {
  text-align: center; }
  .pavo-widget-heading.style-light-center h1,
  .pavo-widget-heading.style-light-center h2,
  .pavo-widget-heading.style-light-center h3,
  .pavo-widget-heading.style-light-center h4,
  .pavo-widget-heading.style-light-center h5 {
    color: #fff; }

.footer-blockbuilder .formNewLestter {
  width: 830px;
  margin: 0 auto;
  text-align: center; }
  @media (max-width: 1199px) {
    .footer-blockbuilder .formNewLestter {
      width: auto; } }
  .footer-blockbuilder .formNewLestter .inner {
    display: flex;
    flex-direction: column;
    align-items: center; }
  .footer-blockbuilder .formNewLestter .inputNew {
    background: #F5F5F5;
    border: none;
    box-shadow: none;
    border-radius: 0;
    height: 52px; }
    @media (max-width: 480px) {
      .footer-blockbuilder .formNewLestter .inputNew {
        width: 280px; } }
  .footer-blockbuilder .formNewLestter .button-submit button {
    height: 52px;
    border-radius: 0;
    border: none; }

.footer-blockbuilder .pa-row-inner {
  line-height: 30px; }

.footer-blockbuilder .pa-element-inner .image-item img {
  display: inline-block; }

.footer-blockbuilder .pa-element-inner .pavo-widget-text p {
  font-size: 12px;
  font-weight: 300; }
  .footer-blockbuilder .pa-element-inner .pavo-widget-text p span {
    color: #0088cc; }

.footer-blockbuilder .pa_gallery_element_wrapper .pa_gallery_element {
  margin-top: 15px; }

.footer-blockbuilder .pavo-widget-heading .content-heading,
.footer-blockbuilder .pavo-widget-heading .content-subheading {
  display: inline-block; }

.footer-blockbuilder .pavo-widget-heading .content-heading {
  font-size: 18px;
  font-family: 'PT Serif', serif;
  line-height: 30px;
  font-weight: 500; }

.footer-blockbuilder .list-unstyled li {
  padding: 10px 0; }

/*
 * Icon Featured Box
 */
.pavo-widget-featuredbox {
  position: relative; }
  .pavo-widget-featuredbox .content-icon {
    margin: 0 auto;
    height: 35px !important;
    width: 35px !important;
    line-height: 35px !important;
    text-align: center;
    background: transparent; }
    .pavo-widget-featuredbox .content-icon .fa-th-large {
      line-height: 39px;
      text-align: center; }
  .pavo-widget-featuredbox .icon-radius {
    border: 1px solid #0069a7;
    color: #0069a7;
    border-radius: 50%;
    background: transparent !important; }
    .pavo-widget-featuredbox .icon-radius .fa {
      font-size: 20px !important; }
  .pavo-widget-featuredbox .icon-rectangle {
    font-size: 25px;
    background: transparent; }
  .pavo-widget-featuredbox .content-subtitle {
    color: #888; }
  .pavo-widget-featuredbox.layout1 {
    text-align: center; }
  .pavo-widget-featuredbox.layout2 .content-icon {
    float: left; }
  .pavo-widget-featuredbox.layout2 .content-box-right {
    padding-left: 60px !important; }
  .pavo-widget-featuredbox.layout3 {
    text-align: right; }
    .pavo-widget-featuredbox.layout3 .content-icon {
      float: right; }
    .pavo-widget-featuredbox.layout3 .content-box-left {
      padding-right: 50px !important; }
    .pavo-widget-featuredbox.layout3 .content-title {
      font-size: 14px;
      font-weight: 400;
      margin: 0; }
    .pavo-widget-featuredbox.layout3 .content-description {
      font-size: 18px;
      color: #0069a7;
      font-weight: 700; }

.pavo-widget-image-text.layout_1 {
  border: 1px solid transparent;
  -moz-transition: all 0.35s ease 0s;
  -o-transition: all 0.35s ease 0s;
  -webkit-transition: all 0.35s ease 0s;
  transition: all 0.35s ease 0s;
  border-color: #e8e8e8; }
  .pavo-widget-image-text.layout_1 .content-image {
    display: table-cell;
    vertical-align: top; }
    .pavo-widget-image-text.layout_1 .content-image a {
      z-index: 9;
      position: relative; }
    .pavo-widget-image-text.layout_1 .content-image img {
      border-radius: 0;
      -webkit-border-radius: 0;
      -moz-border-radius: 0;
      -ms-border-radius: 0;
      -o-border-radius: 0; }
  .pavo-widget-image-text.layout_1 .content-text, .pavo-widget-image-text.layout_1 .content-text-right, .pavo-widget-image-text.layout_1 .content-text-left {
    display: table-cell;
    background: #dfa597;
    width: 172px;
    text-align: center;
    vertical-align: middle;
    overflow: hidden;
    padding: 10px;
    height: 240px; }
    @media (max-width: 1199px) {
      .pavo-widget-image-text.layout_1 .content-text, .pavo-widget-image-text.layout_1 .content-text-right, .pavo-widget-image-text.layout_1 .content-text-left {
        width: 100%;
        height: auto;
        display: block; } }
    .pavo-widget-image-text.layout_1 .content-text .content-title, .pavo-widget-image-text.layout_1 .content-text-right .content-title, .pavo-widget-image-text.layout_1 .content-text-left .content-title {
      font-size: 30px;
      color: #FFF; }
    .pavo-widget-image-text.layout_1 .content-text .content-subtitle, .pavo-widget-image-text.layout_1 .content-text-right .content-subtitle, .pavo-widget-image-text.layout_1 .content-text-left .content-subtitle {
      color: #FFF;
      font-size: 14px;
      font-weight: 700;
      text-decoration: underline;
      line-height: 25px;
      -moz-transition: all 0.3s ease;
      -o-transition: all 0.3s ease;
      -webkit-transition: all 0.3s ease;
      transition: all 0.3s ease; }
      .pavo-widget-image-text.layout_1 .content-text .content-subtitle a, .pavo-widget-image-text.layout_1 .content-text-right .content-subtitle a, .pavo-widget-image-text.layout_1 .content-text-left .content-subtitle a {
        color: #FFF; }
    .pavo-widget-image-text.layout_1 .content-text .content-description, .pavo-widget-image-text.layout_1 .content-text-right .content-description, .pavo-widget-image-text.layout_1 .content-text-left .content-description {
      font-size: 12px;
      color: #666666; }

.pavo-widget-image-text.layout_2 .content-text, .pavo-widget-image-text.layout_2 .content-text-right, .pavo-widget-image-text.layout_2 .content-text-left {
  background: #7b86a0 !important; }

/**
 * Countdown
 */
.pavo-widget-countdown .inner {
  padding: 20px 10px;
  text-align: center; }

.pavo-widget-countdown .time-group {
  display: inline-block;
  font-size: 50px;
  text-align: center;
  font-weight: bold;
  padding: 10px 20px;
  background: #0088cc;
  color: white;
  margin: 0 10px; }
  .pavo-widget-countdown .time-group .unit {
    font-size: 11px;
    display: block;
    clear: both;
    padding-top: 10px;
    padding-bottom: 10px;
    font-style: italic !important; }

.pavo-widget-countdown.layout-1 .time-group {
  background: #0088cc; }
  .pavo-widget-countdown.layout-1 .time-group .unit {
    background: #FFF;
    color: #0088cc;
    margin-left: -20px;
    margin-right: -20px;
    margin-bottom: -10px;
    font-style: italic; }

.pavo-widget-countdown.layout-2 .time-group {
  background: inherit;
  color: #000; }
  .pavo-widget-countdown.layout-2 .time-group .unit {
    color: #999;
    display: inline-block;
    font-style: italic; }

.pavo-widget-countdown.layout-2.size-sm {
  padding: 5px 10px; }

.pavo-widget-countdown.layout-2 .time-group {
  font-size: 18px;
  padding: 5px 4px; }

/***/
.pavo-widget-counter .counter-group span {
  display: block;
  text-align: center; }
  .pavo-widget-counter .counter-group span.counter-value {
    font-weight: 600;
    font-size: 44px;
    margin-bottom: 10px; }
  .pavo-widget-counter .counter-group span.counter-label {
    text-transform: uppercase;
    font-size: 18px; }
    @media (max-width: 992px) {
      .pavo-widget-counter .counter-group span.counter-label {
        font-size: 14px; } }

.pavo-widget-counter.no-color .counter-value,
.pavo-widget-counter.no-color .counter-label {
  color: #fff; }

/* Megamenu Widget */
.pavo-widget-instagram .swiper-slide .footer {
  position: absolute;
  bottom: 0;
  right: 0; }

.pavo-widget-instagram.style-v2 .swiper-container {
  margin: 0 -10px; }
  .pavo-widget-instagram.style-v2 .swiper-container .swiper-slide {
    padding: 0px 15px; }

.address ul {
  margin: 0;
  padding: 0; }

.address li {
  list-style: none;
  padding: 5px 0; }
  .address li .icon {
    display: table-cell;
    vertical-align: middle;
    min-width: 50px; }
    .address li .icon .fa {
      font-size: 1.5em; }
  .address li .content {
    border-bottom: 1px solid #f2f2f2;
    padding: 10px 0;
    display: table-cell;
    width: 100%; }
  .address li:last-child .content {
    border-bottom: 0; }

.breadcrumb li {
  margin: 3px; }

#top-links {
  text-align: right; }
  #top-links ul {
    margin: 0;
    padding: 0; }
  #top-links .list-inline > li {
    border-right: 1px solid rgba(255, 255, 255, 0.5); }
    #top-links .list-inline > li a {
      text-decoration: none;
      display: block; }
      #top-links .list-inline > li a i {
        color: #FFF; }
    #top-links .list-inline > li span {
      color: #FFF; }
    #top-links .list-inline > li:last-child {
      border-right: 0; }

.table-responsive .table .text-left .form-control {
  height: auto; }

.well-default .panel-default .panel-body .form-control {
  height: auto; }

.effect-v10 img {
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  width: 100%; }

.effect-v10:hover img {
  transform: scale(1.1);
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  -webkit-transition: all 0.3s;
  transition: all 0.3s; }

.box-content .pavblog-comments {
  padding: 5px 20px; }

@media (min-width: 768px) {
  .newsletter-col2 .formNewLestter {
    text-align: inherit;
    width: 100%; }
    .newsletter-col2 .formNewLestter .inner {
      flex-direction: row; } }
    @media (min-width: 768px) and (min-width: 992px) {
      .newsletter-col2 .formNewLestter .inner .text-title {
        padding-right: 80px !important; } }
    @media (min-width: 768px) and (min-width: 992px) {
      .newsletter-col2 .formNewLestter .inner .text-form {
        margin-left: 80px !important; } }

@media (min-width: 768px) {
      .newsletter-col2 .formNewLestter .inner .col-6 {
        width: 50%; } }

.pavoblog-video-iframe {
  min-height: 430px; }

.page-checkout-cart .well-default .panel .panel-body {
  padding-top: 20px; }

.form-horizontal {
  padding: 20px 20px 60px 20px;
  box-shadow: none;
  background: #f5f5f5;
  margin-bottom: 20px; }
  .form-horizontal h4 {
    color: #111; }

/* Slide */
.slide-text-1 {
  font-size: 14px !important;
  color: #fff;
  font-style: italic;
  font-weight: 700;
  padding: 5px 15px !important;
  background: #C5BA71;
  font-family: "PT Serif", cursive; }
  @media (max-width: 480px) {
    .slide-text-1 {
      font-size: 8px !important;
      padding: 3px 7px !important; } }

.slide-text-2 {
  color: #111111;
  font-size: 32px !important;
  font-weight: 400; }
  @media (max-width: 1520px) {
    .slide-text-2 {
      font-size: 26px !important; } }
  @media (max-width: 1199px) {
    .slide-text-2 {
      font-size: 20px !important; } }
  @media (max-width: 991px) {
    .slide-text-2 {
      font-size: 17px !important; } }
  @media (max-width: 480px) {
    .slide-text-2 {
      font-size: 9px !important; } }

.slide-text-2-1 {
  color: #111111;
  font-size: 48px !important;
  font-weight: 800; }
  @media (max-width: 1199px) {
    .slide-text-2-1 {
      font-size: 36px !important; } }
  @media (max-width: 480px) {
    .slide-text-2-1 {
      font-size: 21px !important; } }

.slide-text-3 {
  font-size: 16px !important;
  color: #7b86a0;
  font-style: italic;
  font-weight: 700;
  letter-spacing: 2px;
  font-family: "PT Serif", cursive; }
  @media (max-width: 480px) {
    .slide-text-3 {
      font-size: 9px !important; } }

.slide-text-3-1 {
  font-size: 16px !important;
  color: #7b86a0;
  font-style: italic;
  font-weight: 700;
  letter-spacing: 2px;
  font-family: "PT Serif", cursive; }
  @media (max-width: 480px) {
    .slide-text-3-1 {
      font-size: 6px !important; } }

.slide-text-4 {
  color: #222222;
  font-size: 14px !important;
  font-weight: 700;
  background: #fff;
  width: 140px;
  height: 40px;
  line-height: 40px !important;
  text-align: center; }
  @media (max-width: 480px) {
    .slide-text-4 {
      width: 90px;
      height: 30px;
      line-height: 30px !important;
      font-size: 12px !important; } }

/* minicart */
.minicart-style-2 ul li p .fa-share {
  color: #fff !important; }

.minicart-style-2 ul li p .fa {
  font-size: 14px; }

.minicart-style-2 ul li button .fa {
  color: #fff !important; }

.minicart-style-2 ul li td {
  min-width: 50px; }
  .minicart-style-2 ul li td .img-thumbnail {
    padding: 0;
    max-width: initial; }

.pavo-widget-quicklogin .list-inline .dropdown-menu {
  display: block;
  height: auto; }
  .pavo-widget-quicklogin .list-inline .dropdown-menu .inner ul {
    padding: 0; }
    .pavo-widget-quicklogin .list-inline .dropdown-menu .inner ul li {
      line-height: 26px;
      list-style: none; }
      .pavo-widget-quicklogin .list-inline .dropdown-menu .inner ul li a {
        font-size: 14px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
